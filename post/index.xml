<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on CANTATAS</title>
    <link>https://html6.club/post/</link>
    <description>Recent content in Posts on CANTATAS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2019. All rights reserved.</copyright>
    <lastBuildDate>Thu, 10 Jan 2019 20:52:16 +0800</lastBuildDate>
    
	<atom:link href="https://html6.club/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Github 私有仓库代码提交</title>
      <link>https://html6.club/post/github-private-org-push/</link>
      <pubDate>Thu, 10 Jan 2019 20:52:16 +0800</pubDate>
      
      <guid>https://html6.club/post/github-private-org-push/</guid>
      <description> 1. 在github上创建仓库名为 “githubDemo” 选择 “Private” 账号示例:  github账号：githubName github密码：8888888  2. clone拉取私有仓库到本地  拉取URL规则：”账号@github.com/账号/仓库名.git“
 git clone https://githubName@github.com/githubName/githubDemo.git  3. push提交到远程私有仓库  将你的代码拷贝到 “githubDemo” 文件夹中,执行如下代码:   提交RUL规则：“账号:密码@github.com/账号/仓库名.git”
 git remote add origin https://githubName:88888888@github.com/githubName/githubDemo.git git add . git commit -m &amp;quot;first commit&amp;quot; git push --set-upstream origin master  </description>
    </item>
    
    <item>
      <title>display: none与visibility: hidden的区别</title>
      <link>https://html6.club/post/display-and-visibility/</link>
      <pubDate>Mon, 15 May 2017 20:01:22 +0300</pubDate>
      
      <guid>https://html6.club/post/display-and-visibility/</guid>
      <description>visibility: hidden和display: none的区别不仅仅在于display: none隐藏后的元素不占据任何空间，而visibility: hidden隐藏后的元素空间依旧保留 ，实际上没那么简单，visibility是一个非常有故事性的属性 1、visibility具有继承性，给父元素设置 visibility:hidden; 子元素也会继承这个属性。但是如果重新给子元素设置visibility: visible,则子元素又会显示出来。这个和display: none有着质的区别
2、visibility: hidden 不会影响计数器的计数，如图所示，visibility: hidden 虽然让一个元素不见了，但是其计数器仍在运行。这和display: none完全不一样
3、CSS3 的 transition 支持 visibility 属性，但是并不支持 display，由于 transition 可以延迟执行，因此可以配合visibility使用纯 css 实现 hover 延时显示效果。提高用户体验。</description>
    </item>
    
    <item>
      <title>使用weinre真机调试移动端H5页面</title>
      <link>https://html6.club/post/use-weinre-doc/</link>
      <pubDate>Sun, 05 Feb 2017 17:39:16 +0800</pubDate>
      
      <guid>https://html6.club/post/use-weinre-doc/</guid>
      <description> 1. 安装 npm npm install -g weinre  yarn yarn add weinre  2. 启动 weinre --httpPort 8081 --boundHost -all- /*这里的端口8081可以自定义*/  3. 浏览器打开weinre首页 4. 调试页面js引入 5. 远程真机调试  进入要调试的设备：
  远程设备调试：
  手机端效果：
 </description>
    </item>
    
  </channel>
</rss>